name: Build and Publish

on:
  workflow_call:
    inputs:
      mumble_version:
        required: true
        type: string
      docker_version:
        required: true
        type: string
      platforms:
        required: true
        type: string
      publish:
        required: true
        type: boolean
      update_latest:
        required: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container registry
        if: ${{ inputs.publish }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure target tags (with latest)
        if: ${{ inputs.update_latest }}
        run: echo "PRE_TAGS=mumble-server:latest mumble-server:${{ inputs.mumble_version }} mumble-server:${{ inputs.mumble_version }}-${{ inputs.docker_version }}" >> $GITHUB_ENV

      - name: Configure target tags (without latest)
        if: ${{ ! inputs.update_latest }}
        run: echo "PRE_TAGS=mumble-server:${{ inputs.mumble_version }} mumble-server:${{ inputs.mumble_version }}-${{ inputs.docker_version }}" >> $GITHUB_ENV

      - name: Make tags for registries
        run: |
          TAG_ARRAY=()
          for current in $PRE_TAGS; do
            TAG_ARRAY+=("mumblevoip/$current" "ghcr.io/mumble-voip/$current")
          done
          TAGS="$( IFS=","; echo "${TAG_ARRAY[*]}" )"
          echo "TAGS=$TAGS" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          push: ${{ inputs.publish }}
          build-args: |
            MUMBLE_VERSION=${{ inputs.mumble_version }}
            MUMBLE_CMAKE_ARGS="-Dtracy=ON"
          tags: ${{ env.TAGS }}
        env:
          MUMBLE_VERSION: ${{ inputs.mumble_version }}
